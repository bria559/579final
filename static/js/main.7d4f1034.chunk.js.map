{"version":3,"sources":["GetCovidData.js","App.js","index.js"],"names":["GetCovidData","country","callback","fetch","then","response","json","data","err","console","error","DisplayCovidData","jsons","country_input","inputEl","useRef","useState","country_facts","SetCountryFacts","values","setValue","retrieve","current","value","result","log","message","anime","targets","translateX","rotate","duration","direction","className","placeholder","ref","type","onKeyDown","event","key","DropdownButton","alignRight","title","id","onSelect","e","Dropdown","Item","eventKey","Divider","onClick","ReactDOM","render","document","getElementById"],"mappings":"oKAuBeA,MAZf,SAAsBC,EAASC,GAE3BC,MAAM,4CAAD,OAA6CF,EAA7C,iBACAG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACHL,EAASK,MAEX,SAACC,GACCC,QAAQC,MAAMF,O,+BC8FXG,MA1Gf,WACI,IAKIC,EACAC,EANEC,EAAUC,iBAAO,IAEvB,GADiBA,iBAAO,IACiBC,mBAAS,KAAlD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAwBF,qBAAxB,mBACA,GADA,UAC2BA,mBAAS,KAApC,mBAAOG,EAAP,KAAeC,EAAf,KAoBA,SAASC,IACLR,EAAgBC,EAAQQ,QAAQC,MAEhCvB,EAAaa,GAAe,SAACW,GACzBf,QAAQgB,IAAID,GACW,gDAAnBA,EAAOE,QAGPR,EADAN,EAAQ,eAIRA,EAAQY,EAAOL,GACfV,QAAQgB,IAAIb,GACZM,EAAgBN,OAa5B,OA3CkBe,YAAM,CACpBC,QAAS,MACTC,WAAY,IACZC,OAAQ,QACRC,SAAU,IACVC,UAAW,cAuCX,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,gCACI,uDACA,4FAEJ,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,uBACEA,UAAU,eACVC,YAAY,kBACZC,IAAKrB,EACLsB,KAAK,OACLC,UArBd,SAAmBC,GACfzB,EAAgBC,EAAQQ,QAAQC,MACf,UAAbe,EAAMC,KACNlB,OAoBI,8BACA,eAACmB,EAAA,EAAD,CACIC,YAAU,EACVC,MAAM,aACNC,GAAG,4BACHC,SAvDG,SAACC,GAChBpC,QAAQgB,IAAIoB,GACZzB,EAASyB,IAiDD,UAMY,cAACC,EAAA,EAASC,KAAV,CAAeC,SAAS,SAAxB,oBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,YAAxB,uBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACF,EAAA,EAASG,QAAV,IACA,cAACH,EAAA,EAASC,KAAV,CAAeC,SAAS,YAAxB,4BAIX,wBACCf,UAAU,kBACViB,QAAS,WACP7B,KAHH,6BASD,sBAAKY,UAAU,aAAf,UACA,wBAAQU,GAAK,eAAeV,UAAU,MAAtC,SAA4C,oBAAIA,UAAU,MAAd,SAAqBhB,MACjE,6BAAKE,kB,kBC5FrBgC,IAASC,OACP,mCACE,sBAAKnB,UAAU,YAAf,UACE,uCAKA,8CACA,cAAC,EAAD,IACA,4BAGJoB,SAASC,eAAe,W","file":"static/js/main.7d4f1034.chunk.js","sourcesContent":["// function GetCovidData(country, callback) {\r\n//     // https://disease.sh/v3/covid-19/countries/jamaica?strict=true\r\n//     fetch(`https://disease.sh/v3/covid-19/countries/${(new URLSearchParams({country})).toString()}`)\r\n//         .then((response) => response.json())\r\n//         .then((data) => {\r\n//             callback(data);\r\n//         }, (err) => {\r\n//             console.error(err);\r\n//         });\r\n// };\r\n\r\nfunction GetCovidData(country, callback) {\r\n    // https://disease.sh/v3/covid-19/countries/jamaica?strict=true\r\n    fetch(`https://disease.sh/v3/covid-19/countries/${country}?strict=true`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            callback(data);\r\n        }\r\n        , (err) => {\r\n            console.error(err);\r\n        });\r\n};\r\n\r\nexport default GetCovidData;","import { useState, useRef } from 'react';\r\nimport GetCovidData from './GetCovidData';\r\n// import Dropdown from \"./components/Dropdown\"\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport anime from \"animejs\";\r\n\r\nfunction DisplayCovidData(){\r\n    const inputEl = useRef(\"\");\r\n    const selectEl = useRef(\"\");\r\n    const [country_facts, SetCountryFacts] = useState('');\r\n    const [data, setData] = useState();\r\n    const [values, setValue] = useState('');\r\n    let jsons;\r\n    let country_input;\r\n    let myAnimation = anime({\r\n        targets: 'div',\r\n        translateX: 250,\r\n        rotate: \"1turn\",\r\n        duration: 800,\r\n        direction: \"alternate\"\r\n      });\r\n\r\n\r\n    const handleSelect=(e)=>{\r\n        console.log(e);\r\n        setValue(e);\r\n    \r\n      }\r\n    \r\n\r\n\r\n    function retrieve(){\r\n        country_input = inputEl.current.value;\r\n\r\n        GetCovidData(country_input, (result)=>{\r\n            console.log(result)\r\n            if (result.message === 'Country not found or doesn\\'t have any cases'){\r\n\r\n                jsons = 'No results'\r\n                SetCountryFacts(jsons);\r\n            }\r\n            else{\r\n                jsons = result[values];\r\n                console.log(jsons);\r\n                SetCountryFacts(jsons);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    function onKeydown(event){\r\n        country_input = inputEl.current.value;\r\n        if (event.key ==='Enter'){\r\n            retrieve();\r\n        }\r\n        }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div>\r\n                <h2>Welcome to CovidFacts</h2>\r\n                <p>Stay up to date with Covid rates in different countries.</p>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"input-group col\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter a country\"\r\n                  ref={inputEl}\r\n                  type=\"text\"\r\n                  onKeyDown = {onKeydown}\r\n                ></input>\r\n                <div>\r\n                <DropdownButton\r\n                    alignRight\r\n                    title=\"Statistics\"\r\n                    id=\"dropdown-menu-align-right\"\r\n                    onSelect={handleSelect}\r\n                        >\r\n                            <Dropdown.Item eventKey=\"deaths\">Deaths</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"recovered\">Recovered</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"cases\">Cases</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"tests\">Tests</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item eventKey=\"some link\">some link</Dropdown.Item>\r\n                    </DropdownButton>    \r\n                </div>\r\n                \r\n                {<button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => {\r\n                    retrieve();\r\n                  }}>\r\n                  Show Covid Data\r\n                </button>\r\n                }\r\n\r\n                <div className=\"output row\">\r\n                <output id = \"covid_output\" className=\"col\"><h2 className=\"col\">{country_facts}</h2></output>\r\n                <h4>{values}</h4>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    \r\n}\r\n\r\nexport default DisplayCovidData;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DisplayCovidData from './App';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n\nReactDOM.render(\n  <>\n    <div className=\"container\">\n      <div>\n        {/* <a href=\"https://bria559.github.com/579ps6/\"> */}\n          Code\n        {/* </a> */}\n      </div>\n      <h1>Covid19 Data</h1>\n      <DisplayCovidData />\n      <br></br>\n    </div>\n  </>,\n  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}